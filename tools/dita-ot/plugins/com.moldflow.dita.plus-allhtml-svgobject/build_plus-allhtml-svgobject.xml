<project name="plus-allhtml-svgobject">
  
  <dirname property="plus-allhtml-svgobject.dir" file="${ant.file.plus-allhtml-svgobject}"></dirname>

  <target name="plus-allhtml-svgobject.before.stage1" depends="plus-allhtml-svgobject.init"></target>

  <target name="plus-allhtml-svgobject.after.stage1" depends="plus-allhtml-svgobject.make-static,plus-allhtml-svgobject.make-imagemaps,plus-allhtml-svgobject.convert-to-path,plus-allhtml-svgobject.copy-svgobject,plus-allhtml-svgobject.rasterize"></target>

  <target name="plus-allhtml-svgobject.init">

    
    <condition property="plus.svgobject.format" value="object">
      <not>
        <isset property="plus.svgobject.format"></isset>
      </not>
    </condition>

    
    <condition property="plus.svgobject.raster.mimetype" value="image/png">
      <not>
        <isset property="plus.svgobject.raster.mimetype"></isset>
      </not>
    </condition>

    
    <condition property="plus.svgobject.object.convert-to-path" value="no">
      <and>
        
        <equals arg1="${plus.svgobject.format}" arg2="raster"></equals>
        <not>
          <isset property="plus.svgobject.object.convert-to-path"></isset>
        </not>
      </and>
    </condition>
    <condition property="plus.svgobject.object.convert-to-path" value="yes">
      <not>
        <isset property="plus.svgobject.object.convert-to-path"></isset>
      </not>
    </condition>

    
    <condition property="plus.svgobject.raster.imagemap" value="yes">
      <not>
        <isset property="plus.svgobject.raster.imagemap"></isset>
      </not>
    </condition>

    
    <condition property="plus.svgobject.path" value="svgobject">
      <not>
        <isset property="plus.svgobject.path"></isset>
      </not>
    </condition>

    
    
    <available classname="com.moldflow.batik.ant.SVGMakeStatic" property="plus-allhtml-svgobject.svgobject.plugin.available" classpathref="dost.class.path"></available>

    
    <condition property="plus-allhtml-svgobject.make-imagemaps.required">
      <and>
        <equals arg1="${plus.svgobject.raster.imagemap}" arg2="yes"></equals>
      </and>
    </condition>

    
    <condition property="plus-allhtml-svgobject.convert-to-path.required">
      <and>
        <available classname="com.moldflow.batik.ant.SVGRender" classpathref="dost.class.path"></available>
        <equals arg1="${plus.svgobject.object.convert-to-path}" arg2="yes"></equals>
      </and>
    </condition>

  </target>

  
  <target name="plus-allhtml-svgobject.make-static" if="plus-allhtml-svgobject.svgobject.plugin.available" depends="plus-allhtml-syntaxdiagram-svgobject.copy-files,plus-allhtml-mathml-svgobject.call,plus-allhtml-treediagram-svgobject.copy-files">
    
    <taskdef name="svg-make-static" classname="com.moldflow.batik.ant.SVGMakeStatic" classpathref="dost.class.path"></taskdef>

    <svg-make-static toDir="${dita.temp.dir}">
      <fileset dir="${dita.temp.dir}" includes="**/*_dynamic.svg"></fileset>
      <globmapper from="*_dynamic.svg" to="*.svgrendered"></globmapper>
    </svg-make-static>

    <delete>
      <fileset dir="${dita.temp.dir}" includes="**/*_dynamic.svg"></fileset>
    </delete>

    <move todir="${dita.temp.dir}" overwrite="true">
      <fileset dir="${dita.temp.dir}" includes="**/*.svgrendered"></fileset>
      <globmapper from="*.svgrendered" to="*.svg"></globmapper>
    </move>
  </target>

  <target name="plus-allhtml-svgobject.make-imagemaps" if="plus-allhtml-svgobject.make-imagemaps.required">
    <xslt processor="trax" basedir="${dita.temp.dir}" destdir="${dita.temp.dir}" style="${plus-allhtml-svgobject.dir}/xsl/svg2imagemap-shell.xsl" classpathref="dost.class.path">
      <fileset dir="${dita.temp.dir}" includes="**/*.svg"></fileset>
      <globmapper from="*.svg" to="*.svg.imagemap"></globmapper>
    </xslt>
  </target>

  
  <target name="plus-allhtml-svgobject.convert-to-path" if="plus-allhtml-svgobject.convert-to-path.required">
    
    <taskdef name="svg2svg" classname="com.moldflow.batik.ant.SVGRender" classpathref="dost.class.path"></taskdef>

    <svg2svg toDir="${dita.temp.dir}">
      <fileset dir="${dita.temp.dir}" includes="**/*_topath.svg"></fileset>
      <globmapper from="*_topath.svg" to="*.svgrendered"></globmapper>
    </svg2svg>

    <delete>
      <fileset dir="${dita.temp.dir}" includes="**/*_topath.svg"></fileset>
    </delete>

    <move todir="${dita.temp.dir}" overwrite="true">
      <fileset dir="${dita.temp.dir}" includes="**/*.svgrendered"></fileset>
      <globmapper from="*.svgrendered" to="*.svg"></globmapper>
    </move>
  </target>

  
  <target name="plus-allhtml-svgobject.count.svg">
    <fileset id="plus-allhtml-svgobject.count.svg.id" dir="${dita.temp.dir}" includes="**/*.svg"></fileset>
    <pathconvert property="plus-allhtml-svgobject.exist.svg" setonempty="false" refid="plus-allhtml-svgobject.count.svg.id"></pathconvert>
    <condition property="plus-allhtml-svgobject.rasterize.required">
      <and>
        <isset property="plus-allhtml-svgobject.svgobject.plugin.available"></isset>
        <isset property="plus-allhtml-svgobject.exist.svg"></isset>
      </and>
    </condition>
  </target>

  
  <target name="plus-allhtml-svgobject.rasterize" depends="plus-allhtml-svgobject.count.svg" if="plus-allhtml-svgobject.rasterize.required">
    <taskdef name="svg-rasterize" classname="org.apache.tools.ant.taskdefs.optional.RasterizerTask" classpathref="dost.class.path"> </taskdef>

    <svg-rasterize destdir="${output.dir}${file.separator}${plus.svgobject.path}" result="${plus.svgobject.raster.mimetype}" classname="jaxp">
      <fileset dir="${dita.temp.dir}" includes="**/*.svg"></fileset>
    </svg-rasterize>
  </target>

  
  <target name="plus-allhtml-svgobject.test.exist.svgobject.directory">
    <condition property="plus-allhtml-svgobject.exist.svgobject.directory">
      <available file="${dita.temp.dir}${file.separator}${plus.svgobject.path}" type="dir"></available>
    </condition>
  </target>

  
  <target name="plus-allhtml-svgobject.count.svgobject" depends="plus-allhtml-svgobject.test.exist.svgobject.directory" if="plus-allhtml-svgobject.exist.svgobject.directory">
    <fileset id="plus-allhtml-svgobject.count.svgobject.id" dir="${dita.temp.dir}${file.separator}${plus.svgobject.path}" includes="**/*.svg"></fileset>
    <pathconvert property="plus-allhtml-svgobject.exist.svgobject" setonempty="false" refid="plus-allhtml-svgobject.count.svgobject.id"></pathconvert>
    <condition property="plus-allhtml-svgobject.copy-svgobject.required">
      <and>
        <isset property="plus-allhtml-svgobject.exist.svgobject"></isset>
        <equals arg1="${plus.svgobject.format}" arg2="object"></equals>
      </and>
    </condition>
  </target>

  
  <target name="plus-allhtml-svgobject.copy-svgobject" depends="plus-allhtml-svgobject.count.svgobject" if="plus-allhtml-svgobject.copy-svgobject.required">
    <copy todir="${output.dir}${file.separator}${plus.svgobject.path}" overwrite="true">
      <fileset dir="${dita.temp.dir}${file.separator}${plus.svgobject.path}" includes="**/*.svg"></fileset>
    </copy>
  </target>


  
  <target name="plus-allhtml-svgobject.copy-files.css" depends="plus-allhtml-svgobject.copy-files.css.to-temp,plus-allhtml-svgobject.copy-files.css.to-output"></target>

  <target name="plus-allhtml-svgobject.copy-files.css.to-temp.check">
    <property name="plus-allhtml-svgobject.copy-files.css.to-temp.required" value="true"></property>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.css.to-output.check">
    <condition property="plus-allhtml-svgobject.copy-files.css.to-output.required">
      <and>
        <equals arg1="${plus.svgobject.format}" arg2="object"></equals>
        <equals arg1="${plus.svgobject.object.convert-to-path}" arg2="no"></equals>
      </and>
    </condition>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.css.to-temp" depends="plus-allhtml-svgobject.copy-files.css.to-temp.check" if="plus-allhtml-svgobject.copy-files.css.to-temp.required">
    <copy todir="${dita.temp.dir}/${csspath}">
      <fileset refid="fileset"></fileset>
    </copy>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.css.to-output" depends="plus-allhtml-svgobject.copy-files.css.to-output.check" if="plus-allhtml-svgobject.copy-files.css.to-output.required">
    <copy todir="${output.dir}/${csspath}">
      <fileset refid="fileset"></fileset>
    </copy>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.js" depends="plus-allhtml-svgobject.copy-files.js.to-temp,plus-allhtml-svgobject.copy-files.js.to-output"></target>

  <target name="plus-allhtml-svgobject.copy-files.js.to-temp.check">
    <property name="plus-allhtml-svgobject.copy-files.js.to-temp.required" value="true"></property>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.js.to-output.check">
  </target>

  <target name="plus-allhtml-svgobject.copy-files.js.to-temp" depends="plus-allhtml-svgobject.copy-files.js.to-temp.check" if="plus-allhtml-svgobject.copy-files.js.to-temp.required">
    <copy todir="${dita.temp.dir}/${jspath}">
      <fileset refid="fileset"></fileset>
    </copy>
  </target>

  <target name="plus-allhtml-svgobject.copy-files.js.to-output" depends="plus-allhtml-svgobject.copy-files.js.to-output.check" if="plus-allhtml-svgobject.copy-files.js.to-output.required">
    <copy todir="${output.dir}/${jspath}">
      <fileset refid="fileset"></fileset>
    </copy>
  </target>

  <target name="plus-allhtml-svgobject.gen-file.js" depends="plus-allhtml-svgobject.gen-file.js.to-temp,plus-allhtml-svgobject.gen-file.js.to-output"></target>

  <target name="plus-allhtml-svgobject.gen-file.js.to-temp" depends="plus-allhtml-svgobject.copy-files.js.to-temp.check" if="plus-allhtml-svgobject.copy-files.js.to-temp.required">
    <xslt style="${style}" in="${in}" out="${dita.temp.dir}/${jspath}/${out}"></xslt>
  </target>

  <target name="plus-allhtml-svgobject.gen-file.js.to-output" depends="plus-allhtml-svgobject.copy-files.js.to-output.check" if="plus-allhtml-svgobject.copy-files.js.to-output.required">
    <xslt style="${style}" in="${in}" out="${output.dir}/${jspath}/${out}"></xslt>
  </target>

</project>