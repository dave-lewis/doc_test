<?xml version="1.0" encoding="utf-8"?><!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. --><project name="DOST" default="init" basedir=".">
  
  <property file="${basedir}/local.properties"></property>
  
  <import file="build_init.xml"></import>  
  <import file="build_preprocess.xml"></import>
        
  <path id="dost.class.path">
    
<pathelement location="${dita.dir}${file.separator}plugins/com.moldflow.dita.mathml2svg/lib/mml2svg.jar"/>
<pathelement location="${dita.dir}${file.separator}plugins/com.moldflow.dita.xslt-hash/lib/xslt-hash.jar"/>
<pathelement location="${dita.dir}${file.separator}plugins/com.moldflow.dita.plus-htmlhelp-currentencoding/lib/currentencoding.jar"/>
<pathelement location="${dita.dir}${file.separator}plugins/com.moldflow.dita.svgobject/lib/svgrenderingtranscoder.jar"/>
<pathelement location="${dita.dir}${file.separator}demo/fo/lib/fo.jar"/>
    <pathelement location="${dita.dir}${file.separator}lib${file.separator}dost.jar"></pathelement>
  </path>
  
  <target name="init">
    <dita-ot-fail id="DOTA001F">
      <condition>
        <and>
          <not><equals arg1="${transtype}" arg2="eclipsecontent" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="xhtml+" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsehelp+" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="html+" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="htmlhelp+" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="docbook" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="xhtml" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="htmlhelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="javahelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="tocjs" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="wordrtf" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="eclipsehelp" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="pdf2" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="troff" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="odt" casesensitive="false"/></not><not><equals arg1="${transtype}" arg2="legacypdf" casesensitive="false"/></not>
        </and>
      </condition>
    </dita-ot-fail>
    <condition property="transtarget" value="pdf2" else="${transtype}">
      <equals arg1="${transtype}" arg2="pdf" casesensitive="false"></equals>
    </condition>
    <antcall target="dita2${transtarget}"></antcall>
  	<condition property="clean-temp.skip">
  	  <and>
  	    <isset property="clean.temp"></isset>
  	    <equals arg1="${clean.temp}" arg2="no" casesensitive="false"></equals>
  	  </and>
  	</condition>
  	<antcall target="clean-temp">
  	</antcall>
  </target>
  
  <target name="all">
    <echo>The &quot;ant all&quot; demonstration build has moved.
      Please try the following command instead:
      ant all -f build_demo.xml</echo>
  </target>
  
  <target name="dita-preprocess" depends="start-process, init-logger, init-URIResolver, output-version, check-arg, output-deprecated-msg, output-css-warn-message, preprocess"></target>

  <property name='dita.plugin.org.dita.eclipsecontent.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-transtype-xhtml.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-transtype-xhtml'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-svgimage-svginline.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-svgimage-svginline'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-hhp-windows-configfile.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-hhp-windows-configfile'/><property name='dita.plugin.com.moldflow.dita.mathml2svg.dir' location='${dita.dir}\plugins/com.moldflow.dita.mathml2svg'/><property name='dita.plugin.com.moldflow.dita.plus-transtype-anyhtml.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-transtype-anyhtml'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-mathml-svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-mathml-svgobject'/><property name='dita.plugin.com.moldflow.dita.xslt-hash.dir' location='${dita.dir}\plugins/com.moldflow.dita.xslt-hash'/><property name='dita.plugin.com.moldflow.dita.plus-transtype-eclipsehelp.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-transtype-eclipsehelp'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-mathml.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-mathml'/><property name='dita.plugin.org.dita.docbook.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-syntaxdiagram.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram'/><property name='dita.plugin.org.dita.specialization.eclipsemap.dir' location='${dita.dir}\demo/eclipsemap'/><property name='dita.plugin.org.dita.base.dir' location='${dita.dir}'/><property name='dita.plugin.org.dita.htmlhelp.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.syntaxdiagram2svg.dir' location='${dita.dir}\plugins/com.moldflow.dita.syntaxdiagram2svg'/><property name='dita.plugin.com.moldflow.dita.plus-transtype-htmlhelp.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-transtype-htmlhelp'/><property name='dita.plugin.org.dita.pdf.dir' location='${dita.dir}\plugins/org.dita.pdf'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-svgimage.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-svgimage'/><property name='dita.plugin.org.dita.javahelp.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-xhtml-namespace.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-xhtml-namespace'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-mathml-inline.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-mathml-inline'/><property name='dita.plugin.org.dita.specialization.dita11.dir' location='${dita.dir}\demo/dita11'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-currentencoding.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-currentencoding'/><property name='dita.plugin.org.dita.specialization.dita132.dir' location='${dita.dir}\demo/dita132'/><property name='dita.plugin.com.sophos.tocjs.dir' location='${dita.dir}\demo/tocjs'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-mathml-svginline.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-mathml-svginline'/><property name='dita.plugin.com.moldflow.dita.doctype.svg.dir' location='${dita.dir}\plugins/com.moldflow.dita.doctype.svg'/><property name='dita.plugin.org.dita.wordrtf.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-alias-map.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-alias-map'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-treediagram.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-treediagram'/><property name='dita.plugin.com.acl.branding.dir' location='${dita.dir}\demo/acl_branding'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-csh-resourceid.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-csh-resourceid'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-topic2html.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-topic2html'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-hhp-modular.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-hhp-modular'/><property name='dita.plugin.com.moldflow.dita.plus-html-topics-twopass.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-html-topics-twopass'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-treediagram-svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-treediagram-svgobject'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-topics-twopass.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-topics-twopass'/><property name='dita.plugin.com.moldflow.dita.plus-preprocess-breadcrumbs.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-preprocess-breadcrumbs'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-treediagram-svginline.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-treediagram-svginline'/><property name='dita.plugin.org.dita.eclipsehelp.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-encoding.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-encoding'/><property name='dita.plugin.com.moldflow.dita.svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.svgobject'/><property name='dita.plugin.com.moldflow.dita.treediagram2svg.dir' location='${dita.dir}\plugins/com.moldflow.dita.treediagram2svg'/><property name='dita.plugin.com.moldflow.dita.plus-anyhtml-topics-twopass.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-anyhtml-topics-twopass'/><property name='dita.plugin.org.dita.pdf2.dir' location='${dita.dir}\demo/fo'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-svgimage-svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-svgimage-svgobject'/><property name='dita.plugin.com.moldflow.dita.specialization.mathml2.dir' location='${dita.dir}\plugins/com.moldflow.dita.specialization.mathml2'/><property name='dita.plugin.com.moldflow.dita.doctype.xhtml.dir' location='${dita.dir}\plugins/com.moldflow.dita.doctype.xhtml'/><property name='dita.plugin.org.dita.specialization.h2d.dir' location='${dita.dir}\demo/h2d'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-svgobject'/><property name='dita.plugin.com.moldflow.dita.plus-eclipsehelp-topics-twopass.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-eclipsehelp-topics-twopass'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-syntaxdiagram-svgobject.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram-svgobject'/><property name='dita.plugin.org.dita.troff.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-csh.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-csh'/><property name='dita.plugin.com.moldflow.dita.plus-transtype-html.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-transtype-html'/><property name='dita.plugin.org.dita.xhtml.dir' location='${dita.dir}'/><property name='dita.plugin.org.dita.odt.dir' location='${dita.dir}'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-syntaxdiagram-svginline.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram-svginline'/><property name='dita.plugin.com.moldflow.dita.plus-htmlhelp-includefile.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-htmlhelp-includefile'/><property name='dita.plugin.com.moldflow.dita.plus-allhtml-remodel.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-allhtml-remodel'/><property name='dita.plugin.com.moldflow.dita.plus-xhtml-topics-twopass.dir' location='${dita.dir}\plugins/com.moldflow.dita.plus-xhtml-topics-twopass'/><property name='dita.plugin.org.dita.legacypdf.dir' location='${dita.dir}\demo/legacypdf'/><property name='dita.plugin.com.moldflow.dita.specialization.tree-d.dir' location='${dita.dir}\plugins/com.moldflow.dita.specialization.tree-d'/>
  <!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2eclipsecontent.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2docbook.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
    Sourceforge.net. See the accompanying license.txt file for 
    applicable licenses.--><!--
    | (C) Copyright IBM Corporation 2006. All Rights Reserved.
    *-->
  
  <!--property name="dita.eclipse.plugin" value="no"/-->
    
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_general.xml"></import>
  
<import file="build_dita2xhtml.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2htmlhelp.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2javahelp.xml"></import>
<!-- 
  This file is part of the DITA Open Toolkit project hosted on
  Sourceforge.net. See the accompanying license.txt file for
  applicable licenses.
  
  (C) Copyright Shawn McKenzie, 2007. All Rights Reserved.

  UPDATES:
    20110817 RDA: Several changes:
        * Use property dita.plugin.com.sophos.tocjs.dir (remove hard-coded demo/ dir)
        * Original design only works if $output.file is set in an Ant file, and
          if XHTML is created independently. Refactoring to use that original
          processing when $output.file is specified; otherwise:
          1) Return HTML files along with navigation
          2) Return default frameset (with name based on map name)
          3) Set $output.file to a default value of toctree.js
          4) Return supporting JS and CSS files for the default frameset
  *-->

  
<target name="dita2tocjs" depends="dita-preprocess, tocjsInit, map2tocjs, topic2tocjs, tocjsDefaultOutput">
  </target>

  
<target name="tocjsInit">
      
<condition property="dita.plugin.com.sophos.tocjs.copydefaults" value="true">
          
<not>
              
<isset property="output.file"></isset>
          </not>
      </condition>
      
<condition property="output.file" value="${output.dir}${file.separator}toctree.js">
          
<not>
              
<isset property="output.file"></isset>
          </not>
      </condition>
  </target>

  
<target name="topic2tocjs" if="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      <!-- No real support for tocjs on a single topic, only for map -->
    </antcall>
    
<echo>The TocJS output type only supports ditamap files as input.</echo>
  </target>

  
<target name="map2tocjs" unless="noMap" depends="dita-preprocess">
    
<antcall target="dita.map.tocjs">
      
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
    </antcall>
  </target>

  
<target name="dita.map.tocjs" description="generate merged for tocjs">
    
<xslt processor="trax" in="${input}" out="${output.file}" style="${dita.plugin.com.sophos.tocjs.dir}/xsl/tocjs.xsl">
      
<param name="contentwin" expression="${content.frame}" if="content.frame"></param>
      
<param name="ditaext" expression="${dita.extname}"></param>
      
<param name="htmlext" expression="${out.ext}"></param>
    </xslt>
  </target>

  
<target name="tocjsDefaultOutput" if="dita.plugin.com.sophos.tocjs.copydefaults">
      <!-- Create usable output for people trying tocjs for the first time -->
      
<antcall target="tocjsDefaultXhtmlOutput"></antcall>
      
<antcall target="tocjsDefaultFrameset"></antcall>
      <!-- Copy default JS and related files -->
      
<copy todir="${output.dir}">
<fileset dir="${dita.plugin.com.sophos.tocjs.dir}${file.separator}basefiles">
<include name="**/*"></include></fileset></copy>
  </target>

  
<target name="tocjsDefaultXhtmlOutput" depends="dita.map.xhtml, copy-revflag, copy-css , dita.topics.xhtml, dita.inner.topics.xhtml, dita.outer.topics.xhtml">
      <!-- Preprocess has already completed based on original dependencies;
           this target continues to XHTML for default output. Seems very 
           indirect way to create the XHTML, so would like something better,
           but do not want to add new XHTML processing for people using
           the original dita2tocjs target. -->
  </target>

  
<target name="tocjsDefaultFrameset" if="dita.plugin.com.sophos.tocjs.copydefaults">
      <!-- Create the default frameset itself -->
      
<condition property="out.ext" value=".html">
          
<not>
              
<isset property="out.ext"></isset>
          </not>
      </condition>
      
<xslt processor="trax" basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" extension="${out.ext}" style="${dita.plugin.com.sophos.tocjs.dir}${file.separator}xsl${file.separator}frameset.xsl">
  	    
<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"></excludesfile>
        
<param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
        
<param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
        
<param name="CSSPATH" expression="${CSSPATH}" if="csspath"></param>
      </xslt>
  </target>

<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2wordrtf.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2eclipsehelp.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2troff.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.--><!-- (c) Copyright IBM Corp. 2011 All Rights Reserved. -->
  
<import file="build_dita2odt.xml"></import>
<!-- This file is part of the DITA Open Toolkit project hosted on 
    Sourceforge.net. See the accompanying license.txt file for 
    applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
        
        
<target name="dita2legacypdf" depends="build-init, preprocess, map2legacypdf, topic2legacypdf">
        </target>
        
        
<target name="topic2legacypdf" if="noMap">
            
<antcall target="dita.topic.fo">
                
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"></param>
            </antcall>
            
<antcall target="dita.fo2pdf">
                
<param name="input" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.fo"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.topic.filename.root}.pdf"></param>
            </antcall>
        </target>
        
        
<target name="map2legacypdf" unless="noMap">
            
<antcall target="dita.map.fo">
                
<param name="input" value="${dita.temp.dir}${file.separator}${user.input.file}"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"></param>
            </antcall>
            
<antcall target="dita.fo2pdf">
                
<param name="input" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.fo"></param>
                
<param name="output" value="${dita.map.output.dir}${file.separator}${dita.map.filename.root}.pdf"></param>
            </antcall>
        </target>
        
        <!-- Build XSL-FO output from ditamap -->
        
<target name="dita.map.fo" description="Build XSL-FO output from ditamap">
            
<condition property="args.xsl" value="${dita.plugin.org.dita.legacypdf.dir}${file.separator}dita2fo-shell.xsl">
                
<not>
                    
<isset property="args.xsl"></isset>
                </not>
            </condition>
            
<dirname file="${dita.temp.dir}${file.separator}${user.input.file}" property="dita.merged.dir"></dirname>
            
<xslt processor="trax" in="${input}" out="${dita.merged.dir}${file.separator}${dita.map.filename.root}_MERGED.xml" style="${dita.script.dir}${file.separator}topicmerge.xsl">
                <!--<xmlcatalog refid="dita.catalog" />-->
            </xslt>
            
<xslt processor="trax" in="${dita.merged.dir}${file.separator}${dita.map.filename.root}_MERGED.xml" out="${output}" style="${args.xsl}">
                <!--<xmlcatalog refid="dita.catalog" />-->
                
<param name="output-related-links" expression="${args.fo.output.rel.links}" if="args.fo.output.rel.links"></param>
                
<param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
                
<param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
                
<param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
                
<param name="dflt-ext" expression="${fo.img.ext}" if="fo.img.ext"></param>
            </xslt>
        </target>
        
        <!-- Build PDF from FO using FOP, need to include FOP, Avalon, 
            and Batik relevant jar files in CLASSPATH -->
        
<target name="dita.fo2pdf" if="hasFOP" description="Build PDF from FO using FOP">
            
<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
                
<classpath>
                    
<fileset dir="${dita.plugin.org.dita.legacypdf.dir}/lib">
                        
<include name="*.jar"></include>
                    </fileset>
                    
<fileset dir="${dita.dir}/lib">
                        
<include name="*.jar"></include>
                    </fileset>
                </classpath>
            </taskdef>
            
<antcall target="dita.fo2pdf.userconfig"></antcall>
            
<antcall target="dita.fo2pdf.nouserconfig"></antcall>
        </target>
        
        
<target name="dita.fo2pdf.userconfig" if="args.fo.userconfig">
            
<fop format="application/pdf" basedir="${input}" fofile="${input}" outfile="${output}" messagelevel="info" userconfig="${args.fo.userconfig}">
            </fop>
        </target>
        
        
<target name="dita.fo2pdf.nouserconfig" unless="args.fo.userconfig">
            
<fop format="application/pdf" basedir="${input}" fofile="${input}" outfile="${output}" messagelevel="info">
            </fop>
        </target>
        
        <!-- Build XSL-FO output from dita topic -->
        
<target name="dita.topic.fo" description="Build XSL-FO output from dita topic">
            
<condition property="args.xsl" value="${dita.plugin.org.dita.legacypdf.dir}${file.separator}dita2fo-shell.xsl">
                
<not>
                    
<isset property="args.xsl"></isset>
                </not>
            </condition>
            
<xslt processor="trax" in="${input}" out="${output}" style="${args.xsl}">
                <!--<xmlcatalog refid="dita.catalog" />-->
                
<param name="output-related-links" expression="${args.fo.output.rel.links}" if="args.fo.output.rel.links"></param>
                
<param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
                
<param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
                
<param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
                
<param name="dflt-ext" expression="${fo.img.ext}" if="fo.img.ext"></param>
            </xslt>
        </target>
        
    
  

  
<import file="plugins/com.moldflow.dita.plus-allhtml-topic2html/build_plus-allhtml-topic2html.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-transtype-xhtml/build_plus-transtype-xhtml.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-xhtml-topics-twopass/build_plus-xhtml-topics-twopass.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-transtype-eclipsehelp/build_plus-transtype-eclipsehelp.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-eclipsehelp-topics-twopass/build_plus-eclipsehelp-topics-twopass.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-xhtml-namespace/build_plus-allhtml-xhtml-namespace.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-transtype-html/build_plus-transtype-html.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-transtype-htmlhelp/build_plus-transtype-htmlhelp.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-allhtml-svgimage-svginline/build_plus-allhtml-svgimage-svginline.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-hhp-windows-configfile/build_plus-htmlhelp-hhp-windows-configfile.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-mathml/build_plus-allhtml-mathml.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-html-topics-twopass/build_plus-html-topics-twopass.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-topics-twopass/build_plus-htmlhelp-topics-twopass.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-svgobject/build_plus-allhtml-svgobject.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-mathml-svgobject/build_plus-allhtml-mathml-svgobject.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram/build_plus-allhtml-syntaxdiagram.xml"></import>

  
<import file="plugins/com.moldflow.dita.syntaxdiagram2svg/syntaxdiagram2svg.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-mathml-inline/build_plus-allhtml-mathml-inline.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-encoding/build_plus-allhtml-encoding.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-currentencoding/build_plus-htmlhelp-currentencoding.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-mathml-svginline/build_plus-allhtml-mathml-svginline.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-alias-map/build_plus-htmlhelp-alias-map.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-treediagram/build_plus-allhtml-treediagram.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-csh/build_plus-htmlhelp-csh.xml"></import>

  
<import file="plugins/com.moldflow.dita.treediagram2svg/treediagram2svg.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-treediagram-svgobject/build_plus-allhtml-treediagram-svgobject.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-treediagram-svginline/build_plus-allhtml-treediagram-svginline.xml"></import>


  
<import file="demo/fo/build.xml"></import>


  
<import file="plugins/com.moldflow.dita.plus-allhtml-svgimage-svgobject/build_plus-allhtml-svgimage-svgobject.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram-svgobject/build_plus-allhtml-syntaxdiagram-svgobject.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-allhtml-syntaxdiagram-svginline/build_plus-allhtml-syntaxdiagram-svginline.xml"></import>

  
<import file="plugins/com.moldflow.dita.plus-htmlhelp-includefile/build_plus-htmlhelp-includefile.xml"></import>

  
  <target name="help">
    <echo level="info">Mandatory properties:</echo>
    <echo level="info"></echo>
    <echo level="info">  args.input=&lt;file&gt;</echo>
    <echo level="info">    Path and name of the input file.</echo>
    <echo level="info"></echo>
    <echo level="info">  transtype={docbook|eclipsecontent|eclipsehelp|eclipsehelp+|html+|htmlhelp|htmlhelp+|javahelp|legacypdf|odt|pdf|pdf2|tocjs|troff|wordrtf|xhtml|xhtml+}</echo>
    <echo level="info">    Transformation type.</echo>
    <echo level="info"></echo>
    <echo level="info">Optional properties:</echo>
    <echo level="info"></echo>
    <echo level="info">  args.logdir=&lt;dir&gt;</echo>
    <echo level="info">    Log directory.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.draft={yes|no}</echo>
    <echo level="info">    Specify whether to output draft info. Default is &quot;no&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.ftr=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the BODY running-footing area.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.hdr=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the BODY running-heading area.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.hdf=&lt;file&gt;</echo>
    <echo level="info">    File to be placed in the HEAD area.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.csspath=&lt;file|url&gt;</echo>
    <echo level="info">    Path for CSS reference.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.css=&lt;file&gt;</echo>
    <echo level="info">    User CSS file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.cssroot=&lt;dir&gt;</echo>
    <echo level="info">    Root directory for user specified CSS file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.copycss={yes|no}</echo>
    <echo level="info">    Copy user specified CSS files. Default is &quot;no&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.indexshow={yes|no}</echo>
    <echo level="info">    Index entries should display within the body of the text itself. Default is &quot;no&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.outext=&lt;ext&gt;</echo>
    <echo level="info">    Output file extension for generated XHTML files. Default is &quot;.html&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.xsl=&lt;file&gt;</echo>
    <echo level="info">    XSLT file used to replace the default XSLT file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.xsl.pdf=&lt;file&gt;</echo>
    <echo level="info">    XSLT file used to replace the default XSLT file when transforming PDF.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.odt.include.rellinks={none|all|nofamily}</echo>
    <echo level="info">    Determine which links are included in the ODT. Default is &quot;none&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.javahelp.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output javahelp toc file in javahelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.javahelp.map=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output javahelp map file in javahelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.eclipsehelp.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output eclipsehelp toc file in eclipsehelp transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.eclipsecontent.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output Eclipse content provider toc file in eclipsecontent transformation. Default is the name of the input ditamap file.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.debug={yes|no}</echo>
    <echo level="info">    Extra debug information should be included in the log. Default is &quot;no&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.grammar.cache={yes|no}</echo>
    <echo level="info">    Use grammar pool caching when parsing dita files. Default is &quot;yes&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.odt.img.embed={yes|no}</echo>
    <echo level="info">    Embedding images as binary data in ODT transform. Default is &quot;yes&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.xhtml.toc=&lt;file&gt;</echo>
    <echo level="info">    Root file name of the output XHTML toc file in XHTML transformation.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.xhtml.classattr={yes|no}</echo>
    <echo level="info">    DITA element names and ancestry are included in XHTML class attributes. Default is &quot;yes&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  args.gen.task.lbl={YES|NO}</echo>
    <echo level="info">    DITA Task sections should get headings. Default is &quot;NO&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  artlbl={yes|no}</echo>
    <echo level="info">    Specify whether to output artwork filenames.</echo>
    <echo level="info"></echo>
    <echo level="info">  basedir=&lt;dir&gt;</echo>
    <echo level="info">    Working directory.</echo>
    <echo level="info"></echo>
    <echo level="info">  clean.temp={yes|no}</echo>
    <echo level="info">    Clean the temp directory before each build. Default is &quot;yes&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  dita.dir=&lt;dir&gt;</echo>
    <echo level="info">    Toolkit&apos;s home directory.</echo>
    <echo level="info"></echo>
    <echo level="info">  dita.temp.dir=&lt;dir&gt;</echo>
    <echo level="info">    Temporary directory.</echo>
    <echo level="info"></echo>
    <echo level="info">  dita.extname=&lt;ext&gt;</echo>
    <echo level="info">    File extension name to be used in the temp directory. Default is &quot;.xml&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  dita.input.valfile=&lt;file&gt;</echo>
    <echo level="info">    Name of the file that contains the filter/flaggin/revision information.</echo>
    <echo level="info"></echo>
    <echo level="info">  generate.copy.outer={1|2|3}</echo>
    <echo level="info">    Specify how to deal with the overflowing dita/topic files. Default is &quot;1&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  onlytopic.in.map={true|false}</echo>
    <echo level="info">    Make dita processor only resolve dita/topic files which are referenced by primary ditamap files. Default is &quot;false&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  out.dir=&lt;dir&gt;</echo>
    <echo level="info">    Output directory.</echo>
    <echo level="info"></echo>
    <echo level="info">  outer.control={fail|warn|quiet}</echo>
    <echo level="info">    Respond to the overflowing dita/topic files. Default is &quot;warn&quot;.</echo>
    <echo level="info"></echo>
    <echo level="info">  retain.topic.fo</echo>
    <echo level="info">    Temporary FO file should be preserved in the output directory. Specify any value, such as &quot;yes&quot;, to preserve the file.</echo>
    <echo level="info"></echo>
    <echo level="info">  validate={true|false}</echo>
    <echo level="info">    Input files are validated. Default is &quot;true&quot;.</echo>
  </target>

</project>